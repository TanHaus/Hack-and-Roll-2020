html, body {
    margin: 0; 
    padding: 0; 
    height: 100%;
}

.biggestContainer > :first-child {
    height: 60%;
}

/* Start Screen */
.background {
    height: 100%; 
    background-image: url('./assets/bg0.jpg');
    background-repeat:no-repeat;
    background-position:bottom; 
    background-size:contain;
}
section h1 {
    text-align: center; 
    font-family: 'Futura';
    font-size: 2rem;
    padding: 2rem 2rem 2rem 2rem;
    margin: 0;
}

button {
    display: block;
    width: 45%;
    margin: 1rem auto;
    padding: 1rem 1.5rem;

    background: rgba(7, 82, 69, 0.5);
    border: 0;
    border-radius: 1rem;

    color: rgb(255, 255, 255);
    text-align: center;
    font-size: 1.5rem;

    transition: all 0.2s ease-out;
}

button:hover,
button:focus,
button:active {
  background: rgb(249, 251, 208);
  color: #000;
}

/* Decision and Outcome Page */
.wrapper {
    background-color: rgba(0, 0, 0, 0.5);
    width: 100%;
    height: 100%;
}

.decPage{
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    position: relative;
    width: 100%;
    height: 60%;
}

.decTitle{
    margin: 0px auto; 
    padding-top: 2rem;
    text-align: center; 
    color: white; 
    font-size: 25px;   
}

.subTitle {
    text-align: center; 
    color: white; 
    font-size: 1rem;
    padding: 1rem 2rem;
}
.outcomeP {
    color: white; 
    font-size: 15px; 
    font-family: Roboto;
    justify-content: center; 
    
}

.decButton {
    color: white;
    padding: 0.7rem;
    margin: 0.7rem auto;
    width: 60%;

    border-radius: 0.5rem;
    border-style: solid;
    border-width: 1px;
    background: rgba(0, 0, 0, 0.5);

    font-size: 0.8rem;
}

/*Mods*/
.menu {
    margin: 0; 
    position: absolute; 
    top: 40%;
    left:50%;
    margin-right:-50%;
    transform: translate(-50%,-50%);
}

.biggestContainer{
    height: 100%;
}

.continueButton{
    background-color: rgba(15, 150, 127, 0.9);;
    position: absolute;
    border-radius: 0.5rem;
    /* color: black; */
    right: 5vw;
    bottom: 5vw;
    padding: 0.5rem;
    font-family: 'Futura';
    width: auto
}

.viz{
    width: 100%;
    height: 40%;
    background-color: rgb(0, 0, 0);
}

.dec{
    width: 100%;
    height: 40%;
    background-color: rgb(97, 97, 97);
}


.episodeContainer{
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    position: relative;
    width: 100%;
    height: 100%;
}

.avatarContainer {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-evenly;
    align-items: flex-end;
    position: absolute;
    bottom: 0;
}

.avatar{
    /* width: 40%;
    max-height: 80%; */
    width: 25%;
    transition: 0.2s ease-in-out;
    transform-origin: 50% 100%;
    filter: brightness(0.8) blur(1px);
}

.dialogueLine{
    font-family: 'Roboto', sans-serif;
    font-size: 0.8rem;
    color: white;
    text-align: center;
    margin-left: 2rem;
    margin-right: 2rem;
}


.dialogueBox {
    background-color: rgba(0, 0, 0, 0.5);
    display: block;
    color: black; 
    padding: 0.8rem;
    margin: 0 auto; 
    position: absolute;
    bottom: 1rem;
    left: calc(15% - 1rem);
    width: 70%; 
}

.charName{
    font-family: 'Futura', sans-serif;
    font-size: 1.5rem;
    color: white;
    
    background-color: rgba(233, 236, 38, 0.705);
    padding: 0.2rem 3rem 0.4rem 1rem;
    border-radius: 0.4rem;
    margin: 0 auto;
    position: absolute;
    bottom: calc(3.5rem + 28px);
    left: calc(15% - 1rem);
}

.activeCharacter {
    transform: scale(2, 2);
    filter: brightness(1);
}

@keyframes flash {
    0%, 100%{
        filter: brightness(1);
    }
    50% {
        filter: brightness(20);
    }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

.addFlash {
    animation: flash 0.5s ease-in-out;
}

.addFadeOut {
    animation: fadeOut 1s ease-in-out;
}

.addSlowFadeOut {
    animation: fadeOut 15s linear;
}

.addFadeIn {
    animation: fadeIn 1s ease-in-out;
}

.stageContainerButtons {
    display: flex;
    flex-flow: column nowrap;
}

.optionsContainerButtons {
    display: grid;
    grid-template-rows: repeat(4, auto);
    grid-template-columns: repeat(3, auto);
    grid-auto-flow: column;
}
.radar {
    padding-top: 10%;
}

.episodeContainer > p {
    margin: auto 4rem;
}